(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))t(n);new MutationObserver(n=>{for(const a of n)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&t(o)}).observe(document,{childList:!0,subtree:!0});function r(n){const a={};return n.integrity&&(a.integrity=n.integrity),n.referrerPolicy&&(a.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?a.credentials="include":n.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function t(n){if(n.ep)return;n.ep=!0;const a=r(n);fetch(n.href,a)}})();const D={hp:100,maxHp:100,power:5};class P{constructor(e){this.hp=D.hp,this.maxHp=D.maxHp,this.power=D.power,this.interest=33+Math.floor(Math.random()*50),this.traits=e,this.inventory={weapon:null,armor:null,potions:[]}}modifyInterest(e,r){const t=Math.max(.1,(1e3-this.traits.expertise)/1e3),n=(Math.random()*2-1)*r,a=(e+n)*t;this.interest=Math.max(0,Math.min(100,this.interest+a))}equip(e){e.type==="Weapon"?this.inventory.weapon=e:e.type==="Armor"&&(this.inventory.armor=e),this.recalculateStats()}addPotion(e){e.type==="Potion"&&this.inventory.potions.push(e)}recalculateStats(){let e=D.power,r=D.maxHp;this.inventory.weapon&&(e+=this.inventory.weapon.stats.power||0,r+=this.inventory.weapon.stats.maxHp||0),this.inventory.armor&&(e+=this.inventory.armor.stats.power||0,r+=this.inventory.armor.stats.maxHp||0);const t=r-this.maxHp;this.power=e,this.maxHp=r,this.hp+=Math.max(0,t)}}class B{constructor(){this.entries=[]}log(e,r="INFO"){this.entries.push({message:e,level:r,timestamp:Date.now()}),console.log(`[${r}] ${e}`)}debug(e){this.log(e,"DEBUG")}info(e){this.log(e,"INFO")}warn(e){this.log(e,"WARN")}error(e){this.log(e,"ERROR")}}const $=15,V=3,Y={Common:1,Uncommon:2,Rare:3},j=10,T=10,q=["loot_1","loot_2","loot_3","loot_4","loot_5"],K=32,A=9,G=300,U=s=>[...s].sort(()=>Math.random()-.5),M=(s,e)=>{let r=0;const t=new Map(e.map(i=>[i.id,i])),n=s.map(i=>t.get(i)).filter(Boolean),a=i=>(r++,{...i,instanceId:`${i.id}-${r}`}),o=n.filter(i=>i.cost===null),h=n.filter(i=>i.cost!==null);let c=[];if(o.length>0)for(const i of o)c.push(a(i),a(i),a(i),a(i));c.push(...h.map(a));let p=0;for(;c.length<K&&o.length>0;)c.push(a(o[p%o.length])),p++;return U(c)};class z{constructor(){this.gameState=null,this.isLoading=!0,this.error=null,this._allItems=[],this._listeners={},this.init=async()=>{await this._loadGameData()},this.startNewGame=()=>{const e={offense:Math.floor(Math.random()*81)+10,risk:Math.floor(Math.random()*81)+10,expertise:0},r=new P(e),t=q,n=M(t,this._allItems),a=n.slice(0,A),o=n.slice(A),h=new B;h.info("--- Starting New Game (Run 1) ---"),this.gameState={phase:"DESIGNER_CHOOSING_DIFFICULTY",designer:{balancePoints:0},adventurer:r,unlockedDeck:t,availableDeck:o,hand:a,shopItems:[],offeredLoot:[],feedback:{key:"game_engine.new_adventurer"},logger:h,run:1,room:1,gameOver:{isOver:!1,reason:""}},this._emit("state-change",this.gameState)},this.startNewRun=()=>{if(!this.gameState)return;const e=M(this.gameState.unlockedDeck,this._allItems),r=e.slice(0,A),t=e.slice(A),n=new P(this.gameState.adventurer.traits);n.interest=this.gameState.adventurer.interest,this.gameState.logger.info(`--- Starting Run ${this.gameState.run} ---`),this.gameState={...this.gameState,adventurer:n,phase:"DESIGNER_CHOOSING_DIFFICULTY",availableDeck:t,hand:r,room:1,feedback:{key:"game_engine.adventurer_returns"},gameOver:{isOver:!1,reason:""}},this._emit("state-change",this.gameState)},this.presentOffer=e=>{if(!this.gameState||this.gameState.phase!=="DESIGNER_CHOOSING_LOOT"||!this.gameState.hand)return;const r=this.gameState.hand.filter(t=>e.includes(t.instanceId));this.gameState.phase="AWAITING_ADVENTURER_CHOICE",this.gameState.offeredLoot=r,this._emit("state-change",this.gameState),setTimeout(()=>{if(!this.gameState||this.gameState.phase!=="AWAITING_ADVENTURER_CHOICE"||!this.gameState.hand)return;const{choice:t,reason:n}=this._getAdventurerChoice(this.gameState.adventurer,this.gameState.offeredLoot),a=this.gameState.adventurer;let o=this.gameState.hand,h=this.gameState.availableDeck;o.forEach(d=>d.justDrafted=!1);let c=o.filter(d=>!e.includes(d.instanceId));const p=A-c.length,i=h.slice(0,p);i.forEach(d=>{d.draftedRoom=this.gameState.room,d.justDrafted=!0});const _=h.slice(p);c.push(...i),t?t.type==="Potion"?a.addPotion(t):a.equip(t):a.interest=Math.max(0,a.interest-10);const E=this.gameState.room+1,w=this.gameState.designer.balancePoints+T;this.gameState={...this.gameState,phase:"DESIGNER_CHOOSING_DIFFICULTY",adventurer:a,feedback:n,availableDeck:_,hand:c,room:E,designer:{balancePoints:w}},this._emit("state-change",this.gameState)},G)},this.runEncounter=e=>{if(!this.gameState||this.gameState.phase!=="DESIGNER_CHOOSING_DIFFICULTY")return;let r={...e},t=!1;if(this.gameState.room>0&&this.gameState.room%5===0){t=!0;const n=Math.max(e.enemyPower,20+this.gameState.room),a=Math.max(e.enemyHp,50+this.gameState.room*5);r={enemyCount:1,enemyPower:n,enemyHp:a}}this.gameState.phase="AWAITING_ENCOUNTER_FEEDBACK",this.gameState.encounter=r,this._emit("state-change",this.gameState),setTimeout(()=>{if(!this.gameState||this.gameState.phase!=="AWAITING_ENCOUNTER_FEEDBACK"||!this.gameState.encounter)return;t&&this.gameState.logger.info("--- BOSS FIGHT ---");const{newAdventurer:n,feedback:a}=this._simulateEncounter(this.gameState.adventurer,this.gameState.room,this.gameState.encounter);if(n.hp<=0){this.gameState.logger.error("GAME OVER: Adventurer has fallen in battle."),this.gameState={...this.gameState,adventurer:n,designer:{balancePoints:this.gameState.designer.balancePoints+T},phase:"RUN_OVER",gameOver:{isOver:!0,reason:{key:"game_engine.adventurer_fell",context:{room:this.gameState.room,run:this.gameState.run}}}},this._emit("state-change",this.gameState);return}if(n.interest<=$){this.gameState.logger.error("GAME OVER: Adventurer lost interest and quit."),this.gameState={...this.gameState,adventurer:n,designer:{balancePoints:this.gameState.designer.balancePoints+T},phase:"RUN_OVER",gameOver:{isOver:!0,reason:{key:"game_engine.adventurer_bored",context:{room:this.gameState.room,run:this.gameState.run}}}},this._emit("state-change",this.gameState);return}this.gameState.hand&&this.gameState.hand.length===0?(this.gameState.logger.warn("Your hand is empty! The adventurer must press on without new items."),a.push({key:"game_engine.empty_hand"}),this.gameState={...this.gameState,phase:"DESIGNER_CHOOSING_DIFFICULTY",adventurer:n,room:this.gameState.room+1,designer:{balancePoints:this.gameState.designer.balancePoints+T},feedback:a,encounter:void 0}):this.gameState={...this.gameState,phase:"DESIGNER_CHOOSING_LOOT",adventurer:n,feedback:a,encounter:void 0},this._emit("state-change",this.gameState)},G)},this.enterWorkshop=()=>{if(!this.gameState)return;const e=this.gameState.run+1,r=this._allItems.filter(t=>t.cost!==null).filter(t=>!this.gameState.unlockedDeck.includes(t.id)).filter(t=>e>=t.minRun);this.gameState={...this.gameState,phase:"SHOP",run:e,room:0,shopItems:U(r).slice(0,4),gameOver:{isOver:!1,reason:""},feedback:{key:"game_engine.welcome_to_workshop"}},this._emit("state-change",this.gameState)},this.purchaseItem=e=>{if(!this.gameState)return;const r=this._allItems.find(o=>o.id===e);if(!r||r.cost===null||this.gameState.designer.balancePoints<r.cost)return;const t=[...this.gameState.unlockedDeck,e],n=this.gameState.designer.balancePoints-r.cost,a=this.gameState.shopItems.filter(o=>o.id!==e);this.gameState.logger.info(`Purchased ${r.name}.`),this.gameState={...this.gameState,designer:{balancePoints:n},unlockedDeck:t,shopItems:a},this._emit("state-change",this.gameState)}}on(e,r){this._listeners[e]||(this._listeners[e]=[]),this._listeners[e].push(r)}_emit(e,r){const t=this._listeners[e];t&&t.forEach(n=>n(r))}_getAdventurerChoice(e,r){var _,E,w,d;const{traits:t,inventory:n}=e;(_=this.gameState)==null||_.logger.debug(`--- Adventurer Decision --- (Offense: ${t.offense}, Risk: ${t.risk})`);const a=((E=n.weapon)==null?void 0:E.stats.power)||0,o=((w=n.armor)==null?void 0:w.stats.maxHp)||0;(d=this.gameState)==null||d.logger.debug(`Current Gear: Weapon Power(${a}), Armor HP(${o})`);const h=l=>{var b,k;let m=(Y[l.rarity]||1)*5;switch(l.type){case"Weapon":const I=(l.stats.power||0)-a;if(I<=0&&l.id!==((b=n.weapon)==null?void 0:b.id))return-1;m+=I*(t.offense/10),I>0&&(m+=I*(t.expertise/10));const O=l.stats.maxHp||0;O<0&&(m+=O*(100-t.risk)/20);break;case"Armor":const S=(l.stats.maxHp||0)-o;if(S<=0&&l.id!==((k=n.armor)==null?void 0:k.id))return-1;m+=S*(100-t.offense)/10,S>0&&(m+=S*(t.expertise/10));const N=l.stats.power||0;N>0&&(m+=N*(t.offense/15));const R=l.stats.power||0;R<0&&(m+=R*(t.risk/10));break;case"Potion":const y=e.hp/e.maxHp;m+=10*(100-t.risk)/100,y<.7&&(m+=20*(1-y)),m+=5*(t.expertise/100),n.potions.length>=V&&(m*=.1);break}return m+Math.random()},c=r.map(l=>({item:l,score:h(l)})).filter(l=>l.score>0);if(c.sort((l,m)=>m.score-l.score),c.length===0||c[0].score<j)return{choice:null,reason:{key:"game_engine.adventurer_declines_offer"}};const p=c[0].item,i={key:"game_engine.adventurer_accepts_offer",context:{itemName:p.name}};return{choice:p,reason:i}}_simulateEncounter(e,r,t){var _,E,w,d,l,m,b,k,I,O;(_=this.gameState)==null||_.logger.info(`--- Encounter: Room ${r} ---`);const n=[];let a=0,o=0;const h=e.hp;for(let S=0;S<t.enemyCount;S++){(E=this.gameState)==null||E.logger.info(`Adventurer encounters enemy ${S+1}/${t.enemyCount}.`);const N=e.hp/e.maxHp,R=1-e.traits.risk/120;if(N<R&&e.inventory.potions.length>0){const v=e.inventory.potions.shift();if(v){const H=v.stats.hp||0;e.hp=Math.min(e.maxHp,e.hp+H),n.push({key:"game_engine.adventurer_drinks_potion",context:{potionName:v.name}}),(w=this.gameState)==null||w.logger.info(`Adventurer used ${v.name} and recovered ${H} HP.`)}}let y=t.enemyHp;for(;y>0&&e.hp>0;){const v=Math.min(.95,.75+e.traits.expertise/500+e.traits.offense/1e3);if(Math.random()<v){const x=e.power;y-=x,(d=this.gameState)==null||d.logger.debug(`Adventurer hits for ${x} damage.`)}else(l=this.gameState)==null||l.logger.debug("Adventurer misses.");if(y<=0){(m=this.gameState)==null||m.logger.info("Enemy defeated."),o++;break}const H=Math.max(.4,.75-e.traits.expertise/500-(100-e.traits.offense)/1e3);if(Math.random()<H){const x=(((b=e.inventory.armor)==null?void 0:b.stats.maxHp)||0)/10,C=Math.max(1,t.enemyPower-x);a+=C,e.hp-=C,(k=this.gameState)==null||k.logger.debug(`Enemy hits for ${C} damage.`)}else(I=this.gameState)==null||I.logger.debug("Enemy misses.")}if(e.hp<=0){(O=this.gameState)==null||O.logger.warn("Adventurer has been defeated.");break}}let c;const i=(h-e.hp)/e.maxHp;return i>.7?(c={key:"game_engine.too_close_for_comfort"},e.modifyInterest(-15,5)):i>.4?(c={key:"game_engine.great_battle"},e.modifyInterest(10,5)):o>3&&e.traits.offense>60?(c={key:"game_engine.easy_fight"},e.modifyInterest(5,5)):(c={key:"game_engine.worthy_challenge"},e.modifyInterest(-2,3)),n.push(c),e.hp>0&&o===t.enemyCount&&(e.traits.expertise+=1),{newAdventurer:e,feedback:n,totalDamageTaken:a}}getAdventurerEndRunDecision(){if(!this.gameState)return"retire";const{interest:e}=this.gameState.adventurer,r=e-$,t=(Math.random()-.5)*20;return r+t>0?"continue":"retire"}async _loadGameData(){try{const e=await fetch("/rogue-steward/game/items.json");if(!e.ok)throw new Error(`global.error_loading_items: ${e.statusText}`);this._allItems=await e.json(),this.startNewGame()}catch(e){this.error=e.message||"global.unknown_error",this._emit("error",null)}finally{this.isLoading=!1,this._emit("state-change",this.gameState)}}}let F={};async function W(s){try{const e=await fetch(`/rogue-steward/locales/${s}.json`);if(!e.ok)throw new Error(`Could not load ${s}.json`);F=await e.json()}catch(e){console.warn(`Failed to load ${s} translations:`,e),s!=="en"&&await W("en")}}function Z(){return navigator.language.split("-")[0]}function f(s,e={}){let t=s.split(".").reduce((n,a)=>n?n[a]:void 0,F);if(!t)return console.warn(`Translation not found for key: ${s}`),s;for(const n in e)t=t.replace(`{${n}}`,String(e[n]));return t}function L(s){return typeof s=="string"?s:!s||!s.key?"":f(s.key,s.context)}async function X(){const s=Z();await W(s)}const J=s=>{if(!s)return f("global.initializing");switch(s.phase){case"AWAITING_ADVENTURER_CHOICE":return f("main.adventurer_considering_offer");case"AWAITING_ENCOUNTER_FEEDBACK":return f("main.adventurer_facing_encounter");default:return f("global.loading")}},Q=s=>{switch(s.phase){case"DESIGNER_CHOOSING_LOOT":return'<div class="lg:col-span-3"><loot-choice-panel></loot-choice-panel></div>';case"DESIGNER_CHOOSING_DIFFICULTY":return'<div class="lg:col-span-3"><battle-panel></battle-panel></div>';case"AWAITING_ADVENTURER_CHOICE":case"AWAITING_ENCOUNTER_FEEDBACK":return`<div class="lg:col-span-3"><loading-indicator text="${J(s)}"></loading-indicator></div>`;default:return`<div class="lg:col-span-3"><div>${f("main.unhandled_game_phase",{phase:s.phase})}</div></div>`}},ee=(s,e,r)=>{if(!e){s.innerHTML=`<div>${f("global.loading")}</div>`;return}if(e.phase==="SHOP"){s.innerHTML="<workshop-screen></workshop-screen>";const h=document.querySelector("workshop-screen");h&&(h.items=e.shopItems,h.balancePoints=e.designer.balancePoints);return}const t=e.gameOver.isOver?`<game-over-screen
                final-bp="${e.designer.balancePoints}"
                reason="${L(e.gameOver.reason)}"
                run="${e.run}"
                decision="${r.getAdventurerEndRunDecision()}"
            ></game-over-screen>`:"";s.innerHTML=`
        <div class="min-h-screen p-4 md:p-6 lg:p-8 flex flex-col items-center">
            ${t}
            <div class="w-full max-w-7xl mx-auto grid grid-cols-1 lg:grid-cols-3 gap-6">
                <div class="lg:col-span-1 space-y-6">
                    <log-panel></log-panel>
                    <game-stats
                        balance-points="${e.designer.balancePoints}"
                        run="${e.run}"
                        room="${e.room}"
                        deck-size="${e.availableDeck.length}"
                    ></game-stats>
                    <feedback-panel message="${Array.isArray(e.feedback)?e.feedback.map(h=>L(h)).join(" "):L(e.feedback)}"></feedback-panel>
                </div>
                <div class="lg:col-span-2 space-y-6">
                    <adventurer-status></adventurer-status>
                </div>
                ${Q(e)}
            </div>
        </div>
    `;const n=document.querySelector("adventurer-status");n&&(n.adventurer=e.adventurer);const a=document.querySelector("loot-choice-panel");a&&(a.choices=e.hand,a.disabled=!1);const o=document.querySelector("log-panel");o&&(o.logger=e.logger,o.traits=e.adventurer.traits)},u=document.getElementById("app");if(!u)throw new Error("Could not find app element to mount to");const g=new z;g.on("state-change",s=>{if(g.isLoading){u.innerHTML=`<div>${f("global.loading_game_data")}</div>`;return}if(g.error){u.innerHTML=`
                <div class="min-h-screen flex items-center justify-center p-4">
                    <div class="bg-brand-surface p-8 rounded-xl shadow-2xl text-center border border-brand-secondary">
                         <h2 class="text-2xl font-bold text-brand-secondary mb-4">${f("global.an_error_occurred")}</h2>
                         <p class="text-brand-text">${g.error}</p>
                    </div>
                </div>
            `;return}ee(u,s,g)});u.addEventListener("present-offer",s=>{const{ids:e}=s.detail;g.presentOffer(e)});u.addEventListener("run-encounter",s=>{const{encounter:e}=s.detail;g.runEncounter(e)});u.addEventListener("enter-workshop",()=>{g.enterWorkshop()});u.addEventListener("purchase-item",s=>{const{itemId:e}=s.detail;g.purchaseItem(e)});u.addEventListener("start-run",()=>{g.startNewRun()});u.addEventListener("start-game",()=>{g.startNewGame()});async function te(){await X(),await g.init(),u.innerHTML=`<div>${f("global.initializing")}</div>`,g.startNewGame()}te();
